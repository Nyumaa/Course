@model Course_Project.Models.ViewModels.PostViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@using Course_Project.Data.UserService

@inject IViewLocalizer Localizer
@inject IUserService UserService
@{
    ViewData["Title"] = "Post";
    string raiting = "0";
    if (Model.Raiting != 0)
        raiting = Model.Raiting.ToString("#.##");
}
<style>

    a:hover {
        text-decoration: none;
    }

    .author-name {
        position: relative;
        top: -8px;
        left: -28px;
    }

    .author sub {
        left: 8px;
        top: 3px;
    }

    .box-with-post {
        background-color: #bbbbbb;
        border-radius: 6px;
    }

    .raitingStar:hover {
        cursor: pointer;
    }
    
</style>
<link rel="stylesheet" href="~/lib/yaireo/dragsort/dist/dragsort.css" />
@if (User.Identity.Name == Model.Author || User.IsInRole("Admin"))
{
    <nav class="navbar navbar-expand-md navbar-light bg-light border-bottom mb-1">
        <div class="navbar" id="navbarSupportedContent">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a asp-controller="Home" asp-action="AddChapter" asp-route-id="@Model.Id" class="btn btn-primary btn-sm ml-1">@Localizer["btnAddChapter"]</a>
                </li>
                <li class="nav-item active">
                    <a asp-controller="Home" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-sm ml-1">@Localizer["btnEditPost"]</a>
                </li>
            </ul>
        </div>
    </nav>
}
<h2>@Model.Title</h2>
<div class="mb-2"><i class="bi bi-bookmarks-fill mr-1"></i><h4 class="d-inline" style=" border-bottom: 1px dotted #000;">@Model.Category</h4></div>

<div>
    <div class="d-inline ageRaiting" data-toggle="tooltip" data-placement="top" title="@Localizer["tooltipRaiting" + Model.AgeRaiting]">@Localizer[Model.AgeRaiting]</div>
    <div class="d-inline size" data-toggle="tooltip" data-placement="top" title="@Localizer["tooltip" + Model.Size]">@Localizer[Model.Size]</div>
    <div class="d-inline raiting"><i class="bi bi-star mr-1"></i>@raiting</div>
</div>

<div class="border-danger mt-4 box-with-post">
    <div class="p-2">
        <div class="d-inline"><img class="border border-info d-inline" style="background-image: url(@Model.ImageUrl); background-size: cover; border-radius: 50%; width: 45px; height: 45px;" /></div>
        <div class="d-inline author"><p class="d-inline"><sub><i class=" text-muted">@Localizer["labelAuthor"]</i></sub><a style="text-decoration: underline;" asp-controller="Profile" asp-action="Detail" asp-route-username="@Model.Author" class="author-name">@Model.Author </a></p></div>

        <div class="mt-2">@Localizer["labelTags"]: <input id="tags" readonly value="@Model.Tags" class="customLook" /></div>
        <div class="mt-2">@Localizer["labelDescription"]:  <p>@Model.Description</p></div>
    </div>

</div>
<div class="form-group mt-1">
    <h4>
        <span class="text-warning">
            <i class="raitingStar bi bi-star"></i>
            <i class="raitingStar bi bi-star"></i>
            <i class="raitingStar bi bi-star"></i>
            <i class="raitingStar bi bi-star"></i>
            <i class="raitingStar bi bi-star"></i>
        </span>
    </h4>

</div>
<div>
    <div class="text-center mt-3"><h4>@Localizer["labelContent"]</h4></div>
    <div>
        @if (Model.Chapters.Count != 0)
        {
            <ol class="chapters">
                @foreach (var chapter in Model.Chapters)
                {
                    <li class="border border-dark bg-secondary pl-1 mb-1">
                        <div class="mt-1">
                            <a class="d-inline-block" asp-controller="Home" asp-action="Chapter" asp-route-id="@Model.Id" asp-route-idC="@chapter.Id">@chapter.Title</a>
                            <div class="d-inline-block ml-lg-5 ml-sm-3">
                                <button id="deleteChapter" name="@chapter.Id" class="btn-sm btn-danger d-inline-block">@Localizer["btnDeleteChapter"]</button>
                            </div>
                        </div>
                        <div>@chapter.Created</div>
                    </li>
                }
            </ol>
        }
        else
        {
            <div class="bg-success">
                <div class="text-center p-3"><p>@Localizer["messageEmptyContent"]</p></div>
            </div>
        }

    </div>
</div>
<div class="mt-2">
    @{
        await Html.RenderPartialAsync("_Comment", new CommentViewModel { PostId = Model.Id, Author = User.Identity.Name });
    }
</div>
<div id="commentsBlock" class="mt-3">

    @foreach (var comment in Model.Comments)
    {
        <div class="container-fluid border border-dark mb-2">
            <div class="row">
                <div class="col-lg-2 bg-success">@comment.Creator</div>
                <div class="col-lg-10 bg-secondary">
                    <div>@comment.Created</div>
                    <div>@Html.Raw(@comment.Message)</div>
                </div>
            </div>

        </div>
    }
</div>

<div>
    <form>
    </form>
</div>

@section Scripts{
    <script src="~/lib/tagify/tagify.min.js"></script>
    <script src="~/lib/yaireo/dragsort/dist/dragsort.js"></script>
    
    <script>
        
        
    </script>
    @{
        Raiting raiting = Model.Raitings.FirstOrDefault(x => UserService.GetNameById(x.Author) == User.Identity.Name);
        if (raiting == null)
        {
            <script>
                $(".raitingStar").mouseenter(function () {
                       $(this).removeClass('bi-star').addClass('bi-star-fill');
                       $(this).prevAll(".raitingStar").removeClass('bi-star').addClass('bi-star-fill');
                });
                $(".raitingStar").mouseleave(function () {
                    $(this).removeClass('bi-star-fill').addClass('bi-star');
                    $(this).prevAll(".raitingStar").removeClass('bi-star-fill').addClass('bi-star');
                });

                $(".raitingStar").click(function test() {
                    var value = $(this).prevAll(".raitingStar").length + 1;
                    $.ajax({
                        url: "/Home/AddRaiting",
                        type: "POST",
                        data: {
                            id: @Model.Id,
                            value: value
                        }
                    });
                    $('.raitingStar').off();
                    $(this).removeClass('bi-star').addClass('bi-star-fill');
                    $(this).prevAll(".raitingStar").removeClass('bi-star').addClass('bi-star-fill');
                });
            </script>
        }
        else
        {
            <script>
                var stars = $('.raitingStar');
                for (var i = 0; i < @raiting.Value; i++) {
                    $(stars[i]).removeClass('bi-star').addClass('bi-star-fill');
                }
            </script>
        }
    }
    @if ((User.Identity.Name == Model.Author || User.IsInRole("Admin")))
    {
        <script>
        $('#deleteChapter').click(function () {
            $.ajax({
                type: 'POST',
                url: 'https://' + $(location).attr('host') + '/Home/DeleteChapter',
                data: {
                    idPost: @Model.Id,
                    idChapter: $(this).attr('name')
                },
                success: function (response) {
                    window.location.href = response.redirectToUrl;
                }
            });

        })

        </script>
    }

    <script>

        @if ((User.Identity.Name == Model.Author || User.IsInRole("Admin")) && Model.Chapters.Count != 0)
        {
          @:var listChapter = document.querySelector('.chapters');
          @:var dragSort = new DragSort(listChapter, {
          @: mode: "vertical"
          @:});
        }

        var inputElem = document.querySelectorAll('input[id="tags"]');
        inputElem.forEach(function callback(currentValue, index, array) {
            var tagify = new Tagify(currentValue, {
                whitelist: ['test', 'test1'],
                dropdown: {
                    maxItems: 10,
                    classname: "tags-look",
                    enabled: 0,
                    closeOnSelect: false
                },
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            });
        });
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
} 