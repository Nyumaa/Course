@model Course_Project.Models.ViewModels.PostViewModel
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Post";
}
<style>
    .raiting{
        border-radius: 12px;
        background: #3a60ae;
        padding: 3px 6px 3px 6px;
        cursor: help;
    }

    .size{
        border-radius: 12px;
        background: #8c4a8f;
        padding: 3px 20px 3px 20px;
        cursor: help;
    }
    a:hover{text-decoration: none;}
    .author-name{
        position: relative;
        top: -8px;
        left: -28px;
    }
    .author sub{
        left: 8px;
        top: 3px;
    }
    .box-with-post{
        background-color: #bbbbbb;
        border-radius: 6px;
    }
</style>
@if(User.Identity.Name == Model.Author)
{
<nav class="navbar navbar-expand-md navbar-light bg-light border-bottom mb-1">
    <div class="navbar" id="navbarSupportedContent">
        <ul class="navbar-nav">
            <li class="nav-item active">
                    <a asp-controller="Home" asp-action="AddChapter" asp-route-id="@Model.Id"  class="btn btn-primary btn-sm ml-1">Add a new chapter</a>
            </li>
        </ul>
    </div>
</nav>
}
<h2>@Model.Title</h2>
<div class="mb-2"><i class="bi bi-bookmarks-fill mr-1"></i><h4 class="d-inline" style=" border-bottom: 1px dotted #000;">@Model.Category</h4></div>

<div>
    <div class="d-inline raiting" data-toggle="tooltip" data-placement="top" title="@Localizer["tooltipRaiting" + Model.AgeRaiting]">@Localizer[Model.AgeRaiting]</div>
    <div class="d-inline size" data-toggle="tooltip" data-placement="top" title="@Localizer["tooltip" + Model.Size]">@Localizer[Model.Size]</div>
</div>

<div class="border-danger mt-4 box-with-post">
    <div class="p-2">
        <div class="d-inline"><img class="border border-info d-inline" style="background-image: url(@Model.ImageUrl); background-size: cover; border-radius: 50%; width: 45px; height: 45px;" /></div>
        <div class="d-inline author"><p class="d-inline"><sub><i class=" text-muted">автор</i></sub><a style="text-decoration: underline;" asp-controller="Profile" asp-action="Detail" asp-route-username="@Model.Author" class="author-name">@Model.Author </a></p></div>

        <div class="mt-2">TAGS: <input id="tags" readonly value="@Model.Tags" class="customLook"/></div>
        <div class="mt-2">Description:  <p>@Model.Description</p></div>
    </div>
    
</div>

<div>
    <div class="text-center mt-3"><h4>Содержание:</h4></div>
    <div>
        @if (Model.Chapters.Count != 0)
        {
            @foreach (var chapter in Model.Chapters)
            {
                <div class="border border-dark bg-secondary pl-1">
                    <div><a asp-controller="Home" asp-action="Chapter" asp-route-id="@Model.Id" asp-route-idC="@chapter.Id">@chapter.Title</a></div>
                    <div>@chapter.Created</div>
                </div>
            }  
        }
        else 
        { 
            <div class="bg-success">
                <div class="text-center p-3"><p>Пользователь пока не добавил ничего сюда!</p></div>
            </div>
        }

    </div>
</div>
<div class="mt-2">
    @{
        await Html.RenderPartialAsync("_Comment", new CommentViewModel { PostId = Model.Id , Author = User.Identity.Name});
    }
</div>
<div class="mt-3">
    @foreach(var comment in Model.Comments)
    {
        <div class="container-fluid border border-dark">
            <div class="col-lg-3 bg-success">@comment.Creator</div>
            <div class="col-lg-9 bg-secondary">
                <div>@comment.Created</div>
                <div>@Html.Raw(@comment.Message)</div>
            </div>
        </div>
    }
</div>

<div>
    <form>

    </form>
</div>

@section Scripts{
    <script src="~/lib/tagify/tagify.min.js"></script>
    <script>
        var inputElem = document.querySelectorAll('input[id="tags"]');
        inputElem.forEach(function callback(currentValue, index, array) {
            var tagify = new Tagify(currentValue, {
                whitelist: ['test', 'test1'],
                dropdown: {
                    maxItems: 10,
                    classname: "tags-look",
                    enabled: 0,
                    closeOnSelect: false
                },
                originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(',')
            });
        });
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
} 